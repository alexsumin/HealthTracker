plugins {
	id 'org.openjfx.javafxplugin' version '0.0.8'
	id 'org.springframework.boot'
	id 'application'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

configure(subprojects) {
	apply plugin: 'io.spring.dependency-management'
	apply plugin: 'java'
}

configure(project('pic-api')) {
	dependencies {
		implementation 'org.springframework.boot:spring-boot-starter-web'
		implementation 'org.hibernate.validator:hibernate-validator'
		compileOnly 'org.projectlombok:lombok'
		annotationProcessor 'org.projectlombok:lombok'
	}

	bootJar {
		enabled = false
	}

	jar {
		enabled = true
	}
}

configure(project('app')) {
	apply plugin: 'org.springframework.boot'
	apply plugin: 'application'
	apply plugin: 'org.openjfx.javafxplugin'

	dependencies {
		implementation 'org.springframework.boot:spring-boot-starter-web'
		implementation 'org.springframework.cloud:spring-cloud-starter-config'
		implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
		implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
		compile group: 'org.openjfx', name: 'javafx-controls', version: '11.0.2'
		compile group: 'org.openjfx', name: 'javafx-graphics', version: '11.0.2'
		implementation project(':pic-generator:pic-api')

		compileOnly 'org.projectlombok:lombok'
		annotationProcessor 'org.projectlombok:lombok'

		testImplementation('org.springframework.boot:spring-boot-starter-test') {
			exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
		}
	}

	javafx {
		version = "11.0.2"
		modules = [ 'javafx.controls', 'javafx.swing'
		]
	}


	bootJar {
		archiveFileName = 'app.jar'
        mainClassName = 'ru.alexsumin.healthtracker.picgenerator.PicGeneratorApplication'
	}


	test {
		useJUnitPlatform()
	}
}